<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sys_properties</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sys_properties">type!=choicelist^ORtype!=boolean^name!=x_pd_integration.api_key^nameSTARTSWITHx_pd_integration^EQ<item display_value="choice list" endquery="false" field="type" goto="false" newquery="false" operator="!=" or="false" value="choicelist"/>
            <item display_value="true | false" endquery="false" field="type" goto="false" newquery="false" operator="!=" or="true" value="boolean"/>
            <item endquery="false" field="name" goto="false" newquery="false" operator="!=" or="false" value="x_pd_integration.api_key"/>
            <item endquery="false" field="name" goto="false" newquery="false" operator="STARTSWITH" or="false" value="x_pd_integration"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>PD Properties Validate</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script>var validator = x_pd_integration.PdPropValidator;

function addErrorMessage(fieldName) {
	gs.addErrorMessage(fieldName + ' format is invalid');
}

(function executeRule(current, previous /*null when async*/) {
	var key = current.name.split('.')[1];

	var keyToMsgMap = {
		default_user: 'Default PagerDuty User ID',
		default_service: 'Default PagerDuty Service ID',
		instance_url: 'PagerDuty instance URL',
		api_key: 'PagerDuty API access key',
		resolved_state_value: 'Incident state value to use when PagerDuty resolves an incident',
		rest_api_endpoint: 'PagerDuty REST API endpoint URL',
		webhook_restapi: 'ServiceNow REST endpoint for webhook callback'
	};

	if (current) {
		var value = current.value;
		var r = validator.validate(key, value);
		if (!r.isValid) {
			addErrorMessage((keyToMsgMap[key] || key));
			current.setAbortAction(true);
		}
	}
})(current, previous);</script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>PagerDuty_v8.0</sys_created_by>
        <sys_created_on>2018-04-13 15:53:22</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d035f0c4db29130070c5771c8c961942</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>PD Properties Validate</sys_name>
        <sys_overrides/>
        <sys_package display_value="PagerDuty Incident Resolution Platform" source="x_pd_integration">39a9d9664f834e00dd657bb28110c77b</sys_package>
        <sys_policy/>
        <sys_scope display_value="PagerDuty Incident Resolution Platform">39a9d9664f834e00dd657bb28110c77b</sys_scope>
        <sys_update_name>sys_script_d035f0c4db29130070c5771c8c961942</sys_update_name>
        <sys_updated_by>PagerDuty_v8.0</sys_updated_by>
        <sys_updated_on>2023-03-10 15:14:09</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d035f0c4db29130070c5771c8c961942"/>
</record_update>
