<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_pd_integration.AddConferenceBridgeController</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>AddConferenceBridgeController</name>
        <script><![CDATA[/*** Changes made to this script are not supported by PagerDuty ***/
var AddConferenceBridgeController = x_pd_integration.AjaxHelper.createAjaxController({

  type: 'AddConferenceBridgeController',

  loadConferenceBridges: function loadConferenceBridges () {
    var bridge = new GlideRecordSecure('x_pd_integration_conference_bridges');
    bridge.query();

    var res = [];
    while (bridge.next()) {
      res.push({
        value: '' + bridge.sys_id,
        name: '' + bridge.title,
        number: '' + bridge.dial_in_number,
        url: '' + bridge.hyperlink
      });
    }

    return res;
  },

  loadCurrentConferenceBridge: function loadCurrentConferenceBridge (sys_id) {
    var incident = new GlideRecordSecure('incident');

    if (!incident.get(sys_id) || !incident.x_pd_integration_incident) {
      return {conference_number: '', conference_url: ''};
    }

    var feature = 'incidents/' + incident.x_pd_integration_incident + '?include%5B%5D=metadata';
    var rest = new x_pd_integration.PagerDuty_REST();
    var response = rest.getREST(feature, {});

    try {
      var json = JSON.parse(response.getBody());
      return {
        conference_number: json.incident.metadata.conference_number,
        conference_url: json.incident.metadata.conference_url
      };
    } catch (e) {
      return {
        conference_number: '',
        conference_url: ''
      };
    }
  },

  addConferenceBridges: function addConferenceBridges (sys_id, snuserId, conference_number, conference_url) {
    var pd = new x_pd_integration.PagerDuty();
    var userId = pd.getUserIDFromFieldData(snuserId, 'sys_id', true);
    var userEmail = pd.getUserEmailByPDID(userId);
    var incident = new GlideRecordSecure('incident');

    if (!incident.get(sys_id)) {
      throw new Error('You can not use this form out of context of existing incident');
    }

    var metadata = {
      conference_number: conference_number,
      conference_url: conference_url
    };

    var body = {
      requester_id: userId,
      incidents: [{
        id: '' + incident.x_pd_integration_incident,
        type: 'incident_reference',
        metadata: metadata
      }]
    };

    var rest = new x_pd_integration.PagerDuty_REST();
    var response = rest.putREST('incidents', body, userEmail);
    var status = response.getStatusCode();

    if (status > 299) {
      throw new Error('error response from PagerDuty. status = ' + status);
    }

    var note = 'PagerDuty Conference Bridge was removed.';
    if (metadata.conference_number || metadata.conference_url) {
      note = 'PagerDuty Conference Bridge: \n';
      if (metadata.conference_number) {
        note = note + 'Dial-in number: ' + metadata.conference_number + '\n';
      }
      if (metadata.conference_url) {
        note = note + 'URL: ' + metadata.conference_url + '\n';
      }
    }

    var currentConfBridge = (metadata.conference_number + ' ' + metadata.conference_url).trim();
    incident.x_pd_integration_conf_bridge = currentConfBridge;

    var notesHelper = x_pd_integration.WorkNotesHelper;
    if (notesHelper.isEnabled('show_note_on_conference_bridge_addition')) {
      incident.work_notes = notesHelper.build(note);
    }
    incident.update();
  }
});
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>PagerDuty_v8.0</sys_created_by>
        <sys_created_on>2019-04-12 10:14:09</sys_created_on>
        <sys_id>7f5a0201dbb03300eb140181ca96199f</sys_id>
        <sys_mod_count>32</sys_mod_count>
        <sys_name>AddConferenceBridgeController</sys_name>
        <sys_package display_value="PagerDuty Incident Resolution Platform" source="x_pd_integration">39a9d9664f834e00dd657bb28110c77b</sys_package>
        <sys_policy/>
        <sys_scope display_value="PagerDuty Incident Resolution Platform">39a9d9664f834e00dd657bb28110c77b</sys_scope>
        <sys_update_name>sys_script_include_7f5a0201dbb03300eb140181ca96199f</sys_update_name>
        <sys_updated_by>PagerDuty_v8.0</sys_updated_by>
        <sys_updated_on>2020-09-01 12:43:14</sys_updated_on>
    </sys_script_include>
</record_update>
