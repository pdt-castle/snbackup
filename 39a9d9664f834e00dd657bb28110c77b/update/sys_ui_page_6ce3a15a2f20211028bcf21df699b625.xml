<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script><![CDATA[jQuery(function () {
  var $ = jQuery;
  var modal = GlideModal.get();
  var snIncidentId = modal.getPreference('snIncidentId');
  var loading = false;
  var userId = g_user.userID;

  var api = x_pd_integration.AjaxHelper.ajaxClientFor('IncidentWorkflowController');
  var trackingApi = x_pd_integration.AjaxHelper.ajaxClientFor('TrackingController');

  var pdIncidentId = g_form.getValue('x_pd_integration_incident');
  var noWorkflowsMessage = '<b>No workflows were found in PagerDuty for the incident \'' + pdIncidentId + '\'.</b>';

  var learnLink = '<a href="https://support.pagerduty.com/docs/incident-workflows' +
    '?utm_source=servicenow_itsm&utm_content=run_workflow_dialog_no_options" ' +
    'target="_blank" rel="noopener noreferrer">Learn how to create a workflow in PagerDuty</a>';

  var notAuthorizedMessage = '<b>Your user is not authorized to run workflows</b><br>';
  var learnPermissionsLink = '<a href="https://www.pagerduty.com/resources/learn/user-roles-permissions/' +
    '?utm_source=servicenow_itsm&utm_content=run_workflow_dialog_permission_error"' +
    ' target="_blank" rel="noopener noreferrer">Learn more about user permissions in PagerDuty</a>';

  var firstReceivedItems = {};
  api.fetchIncidentWorkflows(userId, snIncidentId, function (error, data) {
    firstReceivedItems = data;
    var errorMessage = extractErrorMessage(error, data);
    if (errorMessage) {
      fail(errorMessage);
      return;
    }
    api.isEligibleRunIW(userId, snIncidentId, function (error, result) {
      if (error) {
        jslog('Workflow Run: is Eligible to Run IW check error. ' + JSON.stringify(error, null, 2));
      }
      if (result) {
        showIWSelector();
      } else {
        fail(notAuthorizedMessage + learnPermissionsLink);
      }
    });
  });

  var incidentWorkflowSelector = new x_pd_integration.PdSelect({
    element: document.querySelector('.pd-workflow-selector'),
    initValues: function () {
      var bodyInput = $('.pds-body input');
      bodyInput.attr('disabled', 'disabled');
      bodyInput.attr('readonly', 'readonly');
    },
    load: function (text, callback) {
      if (hasValues(firstReceivedItems)) {
        callback(firstReceivedItems);
        firstReceivedItems = {};
      } else {
        api.fetchIncidentWorkflows(userId, snIncidentId, function (error, data) {
          var errorMessage = extractErrorMessage(error, data);
          if (errorMessage) {
            fail(errorMessage);
            return;
          }
          callback(data);
        });
      }
    },
    onUpdate: function (selectionId) {
      var submitElement = document.querySelector('button.btn.submit-request');
      if (selectionId) {
        submitElement.classList.remove('disabled');
      } else {
        submitElement.classList.add('disabled');
      }
    }
  });

  var submitElement = $('.pd-workflow-form button.submit-request');
  submitElement.on('click', function (event) {
    event.preventDefault();
    event.stopPropagation();
    if (loading) {
      return;
    }
    loading = true;
    trackingApi.track('run_workflow_dialog_clicked_submit_request_button', {}, function (error, _result) {
      if (error) {
        jslog('Tracking error: ' + error);
      }
    });

    submitElement.attr('disabled', true);
    submitElement.html('<span class="icon icon-loading"></span> Running...');

    var incidentWorkflowId = incidentWorkflowSelector.getSelectionData().id;
    var incidentWorkflowName = incidentWorkflowSelector.getSelectionData().name;

    api.runIncidentWorkflow(snIncidentId, userId, incidentWorkflowId, incidentWorkflowName, function (error, result) {
      if (error) {
        jslog(error.stack);
        var message = error.message || 'Error: ' + JSON.stringify(error);
        g_form.addErrorMessage('Error triggering a workflow "' + incidentWorkflowName + '". ' + message);
      } else {
        g_form.addInfoMessage(result.message);
      }
      modal.destroy();
    });
  });

  $('.pd-workflow-form button.submit-cancel').on('click', function (event) {
    event.preventDefault();
    event.stopPropagation();
    trackingApi.track(
      'run_workflow_dialog_clicked_cancel_button', {},
      function (error, _result) {
        if (error) {
          jslog('Tracking error: ' + error);
        }
      }
    );
    modal.destroy();
  });

  function extractErrorMessage (error, data) {
    var errorMessage = '';

    if (error) {
      jslog(error);
      errorMessage = error.message || 'Error: ' + JSON.stringify(error);
      return errorMessage;
    }

    if (data.errorMessage) {
      var middleMessage = data.errorMessage;
      // eslint-disable-next-line es5/no-es6-methods
      if (data.errorMessage.includes('Incident \'' + pdIncidentId + '\' not found')) {
        middleMessage = 'The incident \'' + pdIncidentId + '\' doesn\'t exist in PagerDuty.';
      }
      errorMessage = [noWorkflowsMessage, middleMessage, learnLink].join('<br>');
      return errorMessage;
    }

    if (data.items.length === 0) {
      errorMessage = [noWorkflowsMessage, learnLink].join('<br>');
      return errorMessage;
    }

    return errorMessage;
  }
});

function fail (message) {
  var modal = GlideModal.get();
  g_form.addErrorMessage(message);
  modal.destroy();
}

function showIWSelector () {
  document.querySelector('.pds-body input').removeAttribute('disabled');
  document.querySelector('.pds-body input').removeAttribute('readonly');
  document.querySelector('.pd-workflow-form .pd-message').style.visibility = 'hidden';
  document.querySelector('.pd-workflow-form .form-group').style.visibility = 'visible';
}

function hasValues (obj) {
  return Object.keys(obj).length > 0;
}
]]></client_script>
        <description>Show a PagerDuty "Run a Workflow" Dialog</description>
        <direct>false</direct>
        <endpoint>x_pd_integration_run_workflow_dialog.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
  <g:evaluate var="jvar_stamp" expression="new Date().getTime()" />
  <script language="javascript" src="x_pd_integration.AjaxHelper.jsdbx?v=${HTML:jvar_stamp}"></script>
  <script language="javascript" src="x_pd_integration.PdSelect.jsdbx?v=${HTML:jvar_stamp}"></script>

  <g:evaluate>
    var pdLogo = gs.getProperty('x_pd_integration.pd_logo');
  </g:evaluate>

  <style>
    .form_body {
      background-color: #fff;
    }
    .pd-message {
      height: 2rem;
      text-align: center;
    }
    .pd-workflow-form {
      margin: 1rem;
    }
    .submit-cancel, .submit-request {
      width: 10rem;
    }
  </style>

  <form class="form_body form-horizontal pd-workflow-form">
    <div class="row">
      <div class="col-sm-12">
        <p class="pd-message"><span class="icon icon-loading"></span></p>
        <div class="form-group" style="visibility: hidden;">
          <label class="col-xs-12 col-md-3 col-lg-4 control-label" for="pds-input" style="padding: 0.75rem 0;">
            <span class="label-text">Select a Workflow</span>
          </label>
          <div class="col-xs-10 col-sm-9 col-md-6 col-lg-5 form-field pd-workflow-selector">
            <div class="input-group ref-container">
              <input value="" class="form-control element_reference_input" />
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="row" style="margin-top: 19rem">
      <div class="col-sm-12">
        <div class="pull-left" style="padding: 6px 9px;">
          <img width="120" alt="PagerDuty Logo" src="${HTML:pdLogo}" />
        </div>
        <div class="pull-right">
          <button class="btn btn-default submit-cancel" style="margin-right: 1rem">Cancel</button>
          <button class="btn btn-primary submit-request disabled">Run</button>
        </div>
      </div>
    </div>
  </form>
</j:jelly>
]]></html>
        <name>run_workflow_dialog</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>PagerDuty_v8.0</sys_created_by>
        <sys_created_on>2023-01-24 15:45:59</sys_created_on>
        <sys_id>6ce3a15a2f20211028bcf21df699b625</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>run_workflow_dialog</sys_name>
        <sys_package display_value="PagerDuty Incident Resolution Platform" source="x_pd_integration">39a9d9664f834e00dd657bb28110c77b</sys_package>
        <sys_policy/>
        <sys_scope display_value="PagerDuty Incident Resolution Platform">39a9d9664f834e00dd657bb28110c77b</sys_scope>
        <sys_update_name>sys_ui_page_6ce3a15a2f20211028bcf21df699b625</sys_update_name>
        <sys_updated_by>PagerDuty_v8.0</sys_updated_by>
        <sys_updated_on>2023-09-29 14:39:44</sys_updated_on>
    </sys_ui_page>
</record_update>
