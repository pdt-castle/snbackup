<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>incident</collection>
        <condition>gs.isLoggedIn()</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="incident">x_pd_integration_incidentISNOTEMPTY^x_pd_integration_incidentNOT LIKE---^priorityVALCHANGES^EQ<item endquery="false" field="x_pd_integration_incident" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="false" field="x_pd_integration_incident" goto="false" newquery="false" operator="NOT LIKE" or="false" value="---"/>
            <item display_value="-- None --" endquery="false" field="priority" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>PD Update Priority</name>
        <order>200</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script>(function executeRule(current, previous /*null when async*/) {

  if (current.assignment_group.changes() || current.assigned_to.changes()) {
    gs.debug("{0}. Prevent rule from execution in favour of \"PD Update Priority and Assignment\" business rule that handle the case when Priority and Assignment (either Assignment Group or Assignee) are changing simultaneously.", current.getDisplayValue());
    return;
  }

  var eventName = "x_pd_integration.update_priority";
  gs.debug("Firing event {0} for {1}", eventName, current.getDisplayValue());
  var currentUserSysid = gs.getUser().getID();
  var previousPriorityParams = {
    impact: previous.getValue('impact'),
    priority: previous.getValue('priority'),
    urgency: previous.getValue('urgency'),
  };
  gs.eventQueue(eventName, current, currentUserSysid, JSON.stringify(previousPriorityParams));

})(current, previous);</script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>PagerDuty_v8.0</sys_created_by>
        <sys_created_on>2017-06-08 19:26:28</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>1ec116644f1f72008c38cab18110c7ed</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>PD Update Priority</sys_name>
        <sys_overrides/>
        <sys_package display_value="PagerDuty Incident Resolution Platform" source="x_pd_integration">39a9d9664f834e00dd657bb28110c77b</sys_package>
        <sys_policy/>
        <sys_scope display_value="PagerDuty Incident Resolution Platform">39a9d9664f834e00dd657bb28110c77b</sys_scope>
        <sys_update_name>sys_script_1ec116644f1f72008c38cab18110c7ed</sys_update_name>
        <sys_updated_by>PagerDuty_v8.0</sys_updated_by>
        <sys_updated_on>2020-06-19 18:57:54</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=1ec116644f1f72008c38cab18110c7ed"/>
</record_update>
