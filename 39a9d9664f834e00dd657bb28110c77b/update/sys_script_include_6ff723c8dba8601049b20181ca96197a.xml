<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_pd_integration.ServiceProvisioningValidator</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>ServiceProvisioningValidator</name>
        <script><![CDATA[/*** Changes made to this script are not supported by PagerDuty ***/
var ServiceProvisioningValidator = Class.create();
ServiceProvisioningValidator.prototype = {
  initialize: function() {
    this.separator = " \n";
  },

  validateRelationship: function(rel) {
    var warnings = [];

    if (rel.parent_ci && rel.parent_type != 'Business Service')
      warnings = warnings.concat(this.validateCI(rel, 'parent').warningsString);

    if (rel.child_ci && rel.child_type != 'Business Service')
      warnings = warnings.concat(this.validateCI(rel, 'child').warningsString);

    warnings = warnings.filter(Boolean);

    return { isValid: !warnings.length, warningsString: warnings.join(this.separator) };
  },

  validateCI: function(rel, type) {
    var warnings = [];
    var ciSysId, name;

    if (type == 'parent') {
      ciSysId = rel.parent_ci;
      name = rel.parent_ci_name;
    }
    else {
      ciSysId = rel.child_ci;
      name = rel.child_ci_name;
    }

    var ci = this.getRecord('cmdb_ci', ciSysId);
    var assignmentGroupSysId = ci.getValue('assignment_group');

    if (!ci)
      warnings.push(this.titleCase(type) + ' CI is not in [cmdb_ci*] table(s).');

    else if (!ci.assignment_group)
      warnings.push('The Assignment Group is not configured for the ' + type + ' CI [' + name + '].');

    else if (!this.getEscalationPolicy(assignmentGroupSysId))
      warnings.push('The Assignment Group [' + ci.assignment_group.name + '] is not provisioned in PagerDuty.');

    else if (!ci.assignment_group.manager)
      warnings.push('The Assignment Group [' + ci.assignment_group.name + '] does not have a manager.');

    else if (!this.getMembersTotal(assignmentGroupSysId))
      warnings.push('The Assignment Group [' + ci.assignment_group.name + '] does not have any team members.');

    if (warnings.length)
      warnings[0] = this.titleCase(type) + ' CI: ' + warnings[0];

    return { isValid: !warnings.length, warningsString: warnings.join(this.separator) };
  },

  getRecord: function(table, sysId) {
    var gr = new GlideRecord(table);
    if (!gr.get(sysId))
      return null;
    return gr;
  },

  titleCase: function(string) {
    return string[0].toUpperCase() + string.slice(1);
  },

  getEscalationPolicy: function(agId) {
    var epHelper = new x_pd_integration.EscalationPolicyHelper();
    return epHelper.getPDEscalationPolicyId(agId);
  },

  getMembersTotal: function (agId) {
    var groupCount = 0;
    var count = new GlideAggregate('sys_user_grmember');
    count.addQuery('group', agId);
    count.addAggregate('COUNT', 'group');
    count.query();
    if (count.next())
      groupCount = count.getAggregate('COUNT', 'group');
    return groupCount;
  },

  type: 'ServiceProvisioningValidator',
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>PagerDuty_v8.0</sys_created_by>
        <sys_created_on>2020-11-13 16:47:42</sys_created_on>
        <sys_id>6ff723c8dba8601049b20181ca96197a</sys_id>
        <sys_mod_count>43</sys_mod_count>
        <sys_name>ServiceProvisioningValidator</sys_name>
        <sys_package display_value="PagerDuty Incident Resolution Platform" source="x_pd_integration">39a9d9664f834e00dd657bb28110c77b</sys_package>
        <sys_policy/>
        <sys_scope display_value="PagerDuty Incident Resolution Platform">39a9d9664f834e00dd657bb28110c77b</sys_scope>
        <sys_update_name>sys_script_include_6ff723c8dba8601049b20181ca96197a</sys_update_name>
        <sys_updated_by>PagerDuty_v8.0</sys_updated_by>
        <sys_updated_on>2020-11-27 15:33:43</sys_updated_on>
    </sys_script_include>
</record_update>
