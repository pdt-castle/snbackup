<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_pd_integration.ConditionsHelper</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>ConditionsHelper</name>
        <script>/*** Changes made to this script are not supported by PagerDuty ***/
var AppManager = x_pd_integration.AppManager;
var ConditionsHelper = {
  createPdTeamUiAction: function (gr) {
    var hasTeam = !gr.x_pd_integration_pagerduty_team.nil();
    var hasEscalationPolicy = this.hasEscalationPolicy(gr);
    var usePdTeams = (gs.getProperty('x_pd_integration.use_pd_teams') === 'true');
    return !hasTeam &amp;&amp; hasEscalationPolicy &amp;&amp; usePdTeams;
  },

  hasEscalationPolicy: function (gr) {
    var epHelper = new x_pd_integration.EscalationPolicyHelper();
    var pdEpId = epHelper.getPDEscalationPolicyId(gr.getValue('sys_id'));
    return !!pdEpId;
  },

  provisionCiAsBusinessServiceUiAction: function () {
    return gs.hasRole('x_pd_integration.admin');
  },

  provisionCiSiUiAction: function (gr) {
    return this.provisionCiUiAction(gr) &amp;&amp; AppManager.isPdSiIncidentsInstalled;
  },

  provisionCiUiAction: function (gr) {
    var isPdAdmin = gs.hasRole('x_pd_integration.admin');
    var isServiceNil = gr.x_pd_integration_pagerduty_service.nil();
    var isWebhookNil = gr.x_pd_integration_pagerduty_webhook.nil();
    var sn2pd_mapping = gs.getProperty('x_pd_integration.sn2pd_mapping');
    return isPdAdmin &amp;&amp; isServiceNil &amp;&amp; isWebhookNil &amp;&amp;
      (sn2pd_mapping === 'Configuration Items and Assignment Groups map to PagerDuty');
  },

  provisionGroupSiUiAction: function (gr) {
    return this.provisionGroupUiAction(gr) &amp;&amp; AppManager.isPdSiIncidentsInstalled;
  },

  provisionGroupUiAction: function (gr) {
    return gs.hasRole('x_pd_integration.admin') &amp;&amp;
      gr.x_pd_integration_pagerduty_service.nil() &amp;&amp;
      gr.x_pd_integration_pagerduty_escalation.nil() &amp;&amp;
      gr.x_pd_integration_pagerduty_webhook.nil();
  },

  provisionPDScheduleUiAction: function (gr) {
    var hasSchedule = !gr.x_pd_integration_pagerduty_schedule.nil();
    var hasEscalationPolicy = this.hasEscalationPolicy(gr);
    return !hasSchedule &amp;&amp; hasEscalationPolicy;
  },

  showMigrateWebhooksUiAction: function () {
    return gs.hasRole('x_pd_integration.admin') &amp;&amp;
      String(gs.action.getGlideURI()).indexOf('sysparm_query=webhook_version%3d2') !== -1 &amp;&amp;
      String(gs.action.getGlideURI()).indexOf('sysparm_view=webhooks_migration') !== -1;
  }
};
</script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>PagerDuty_v8.0</sys_created_by>
        <sys_created_on>2018-05-10 16:46:34</sys_created_on>
        <sys_id>f4e244f0db42130070c5771c8c961910</sys_id>
        <sys_mod_count>23</sys_mod_count>
        <sys_name>ConditionsHelper</sys_name>
        <sys_package display_value="PagerDuty Incident Resolution Platform" source="x_pd_integration">39a9d9664f834e00dd657bb28110c77b</sys_package>
        <sys_policy/>
        <sys_scope display_value="PagerDuty Incident Resolution Platform">39a9d9664f834e00dd657bb28110c77b</sys_scope>
        <sys_update_name>sys_script_include_f4e244f0db42130070c5771c8c961910</sys_update_name>
        <sys_updated_by>PagerDuty_v8.0</sys_updated_by>
        <sys_updated_on>2020-09-01 12:44:34</sys_updated_on>
    </sys_script_include>
</record_update>
