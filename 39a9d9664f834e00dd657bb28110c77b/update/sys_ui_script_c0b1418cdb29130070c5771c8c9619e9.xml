<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description/>
        <global>false</global>
        <name>x_pd_integration.PdPropValidator</name>
        <script>/**
 * PagerDuty properties validator module.
 * Can work both on server and client side.
 * Edit this module in your favorite code editor and after changes
 * manually paste to 'PdPropValidator script include' and in 'PdPropValidator UI Script'
 */
var PdPropValidator = (function () {
  /**
   * @param {string} fieldKey - prop key without prefix, for example: 'default_user'
   * @param {string} value - prop value
   * @returns {object} - looks like { isValid: true\false, message: 'when not valid contain describe message else empty string'}
   */
  function validate (fieldKey, value) {
    var result = {isValid: true, message: ''};

    var keyToValidatorsMap = {
      default_user: [required, pdId],
      default_service: [pdId],
      instance_url: [required, pdInstanceUrl],
      api_key: [required, apiKey],
      resolved_state_value: [resolvedState],
      rest_api_endpoint: [required, restApiUrl],
      webhook_restapi: [required, snWebhookPath],
      sn_auth_user: [required],
      sn_auth_userpwd: [required]
    };

    if (keyToValidatorsMap[fieldKey]) {
      for (var i = 0; i &lt; keyToValidatorsMap[fieldKey].length; i++) {
        var r = keyToValidatorsMap[fieldKey][i](value);
        if (!r.isValid) {
          return r;
        }
      }
    }
    return result;
  }

  // __validators__
  function required (value) {
    return {
      isValid: value !== null &amp;&amp; value !== undefined &amp;&amp; value.trim().length &gt; 0,
      message: 'is required'
    };
  }

  function pdId (value) {
    value = value.trim();
    var regexPdId = /^[PQR][A-Z0-9]{6}$/g;
    return {
      isValid: value == '' || regexPdId.test(value),
      message: 'invalid PagerDuty id format'
    };
  }

  function pdInstanceUrl (value) {
    var regexPdInstanceUrl =
      /^https:\/\/[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.eu)?\.(?:pagerduty|pd-staging)\.com\/*$/i;
    return {
      isValid: regexPdInstanceUrl.test(value),
      message: 'invalid PagerDuty instance url format'
    };
  }

  function apiKey (value) {
    // we cant decrypt this field on backend, so be sure that you pass this prop in server validation
    return {
      isValid: value.length &gt;= 20,
      message: 'invalid PagerDuty api key format'
    };
  }

  function resolvedState (value) {
    var resolved_state = parseInt(value);
    return {
      isValid: !isNaN(resolved_state),
      message: 'should be a Number'
    };
  }

  function restApiUrl (value) {
    var regexUrl = /https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&amp;//=]*)/g;
    return {
      isValid: regexUrl.test(value),
      message: 'invalid PagerDuty rest api url format'
    };
  }

  function snWebhookPath (value) {
    var regexWebhookPath = /^[a-z]([a-z_\d]+\/?)+/gi;
    return {
      isValid: regexWebhookPath.test(value),
      message: 'invalid ServiceNow webhook path format'
    };
  }

  // __ public api __
  return {validate: validate};
})();
</script>
        <script_name>PdPropValidator</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>PagerDuty_v8.0</sys_created_by>
        <sys_created_on>2018-04-13 16:46:38</sys_created_on>
        <sys_id>c0b1418cdb29130070c5771c8c9619e9</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>x_pd_integration.PdPropValidator</sys_name>
        <sys_package display_value="PagerDuty Incident Resolution Platform" source="x_pd_integration">39a9d9664f834e00dd657bb28110c77b</sys_package>
        <sys_policy/>
        <sys_scope display_value="PagerDuty Incident Resolution Platform">39a9d9664f834e00dd657bb28110c77b</sys_scope>
        <sys_update_name>sys_ui_script_c0b1418cdb29130070c5771c8c9619e9</sys_update_name>
        <sys_updated_by>PagerDuty_v8.0</sys_updated_by>
        <sys_updated_on>2019-02-20 15:24:14</sys_updated_on>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
